# This workflow will install Python dependencies, run tests and lint with a single version of Python
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python

name: Python application

on:
  push:
    branches: [ "master" ]
  pull_request:
    branches: [ "master" ]

permissions:
  contents: read

jobs:
  slack:
    runs-on: ubuntu-latest
    env:
      SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
    steps:
    - uses: act10ns/slack@v2.1.0
      with:
        status: starting
        channel: '#	jul24_bmlops_plants'
        message: |
          Author: ${{ github.actor }}
          Message: ${{ github.event.head_commit.message }}
          See the changes here: ${{ github.repository }}
      if: always()
    - name: Checkout
      uses: actions/checkout@v4
    - name: Dummy command
      run: |
        ls -lart
    - uses: act10ns/slack@v2.1.0
      with:
        status: ${{ job.status }}
        steps: ${{ toJson(steps) }}
        channel: '#	jul24_bmlops_plants'
      if: always()

  build:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - name: Set up Python 3.10
      uses: actions/setup-python@v4
      with:
        python-version: "3.11"
    - name: Install Poetry
      run: |
        curl -sSL https://install.python-poetry.org | python3 -
        echo "::add-path::${HOME}/.local/bin"
    - name: Install dependencies
      run: poetry install
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with pytest
      run: poetry run pytest
