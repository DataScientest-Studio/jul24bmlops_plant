version: '3.8'

services:
  # Authentication Service
  auth:
    build:
      context: ./api_auth
    image: auth:1.0
    container_name: api_auth
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8001"]
    restart: always
    ports:
      - "81:8001"
    depends_on:
      - db
    networks:
      - plant_network
    env_file:
      - .env

  # Prediction Service
  prediction:
    build:
      context: ./api_prediction
    image: prediction:1.0
    container_name: api_prediction
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8002"]
    restart: always
    ports:
      - "82:8002"
    depends_on:
      - db
    networks:
      - plant_network
    env_file:
      - .env

  # Training Service
  training:
    build:
      context: ./api_training
    image: training:1.0
    container_name: api_training
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8003"]
    restart: always
    ports:
      - "83:8003"
    depends_on:
      - db
    networks:
      - plant_network
    env_file:
      - .env

  # Database Management Service
  db_management:
    build:
      context: ./api_db
    image: db_management:1.0
    container_name: api_db
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8004"]
    restart: always
    ports:
      - "84:8004"
    depends_on:
      - db
    networks:
      - plant_network
    env_file:
      - .env

# MLFLOW services
  mlflow_fastapi:
    build:
      context: ./api_mlflow
    image: lmenale/pr_model:1.0
    ports:
      - "86:5000"  # Expose port for MLFlow UI
      - "85:8005"  # Expose port for FastAPI
    depends_on:
      - db
    environment:
      - MLFLOW_TRACK_DIR_PATH=/app/MLFlow
      - MLFLOW_MODEL_DIR_PATH=/app/Models
      - IMAGES_DIR_PATH=/app/Data
    volumes:
      - ./mlflow_data:/app/MLFlow  # Persistent volume for MLFlow tracking data
      - ./model_data:/app/Models   # Persistent volume for model data
      - ./image_data:/app/Data     # Persistent volume for image data
    networks:
      - plant_network
    env_file:
      - .env

  # Database Service
  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
    networks:
      - plant_network
    env_file:
      - .env

  # pgAdmin Service
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: always
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - plant_network
    env_file:
      - .env

networks:
  plant_network:
    driver: bridge

volumes:
  db:
    driver: local