version: '3.8'

services:
  # Authentication Service
  auth:
    build:
      context: ./api_auth
    container_name: api_auth
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8000"]
    restart: always
    volumes:
      - ./api_auth:/app
    ports:
      - "81:8000"
    environment:
      - DATABASE_URL=postgresql://postgres_user:postgres_password@db:5432/postgres_db
      - PYTHONPATH=/app
    depends_on:
      - db
    networks:
      - plant_network

  # Prediction Service
  prediction:
    build:
      context: ./api_prediction
    container_name: api_prediction
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8002"]
    restart: always
    volumes:
      - ./api_prediction:/app
    ports:
      - "82:8002"
    environment:
      - DATABASE_URL=postgresql://postgres_user:postgres_password@db:5432/postgres_db
      - PYTHONPATH=/app
    depends_on:
      - db
    networks:
      - plant_network

  # Training Service
  training:
    build:
      context: ./api_training
    container_name: api_training
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8003"]
    restart: always
    volumes:
      - ./api_training:/app
    ports:
      - "83:8003"
    environment:
      - DATABASE_URL=postgresql://postgres_user:postgres_password@db:5432/postgres_db
      - PYTHONPATH=/app
    depends_on:
      - db
    networks:
      - plant_network

  # Database Management Service
  db_management:
    build:
      context: ./api_db
    container_name: api_db
    command: ["uvicorn", "app.main:app", "--host", "0.0.0.0", "--port", "8004"]
    restart: always
    volumes:
      - ./api_db:/app
    ports:
      - "84:8004"
    environment:
      - DATABASE_URL=postgresql://postgres_user:postgres_password@db:5432/postgres_db
      - PYTHONPATH=/app
    depends_on:
      - db
    networks:
      - plant_network

  # Database Service
  db:
    image: postgres:latest
    container_name: db
    environment:
      POSTGRES_USER: postgres_user
      POSTGRES_PASSWORD: postgres_password
      POSTGRES_DB: postgres_db
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
    networks:
      - plant_network

  # pgAdmin Service
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
    restart: always
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - plant_network


networks:
  plant_network:
    driver: bridge

# To be deleted
volumes:
  db:
    driver: local

